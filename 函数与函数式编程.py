    # 函数的好处
    #       1.代码一致性。
    #       2.可扩展性。
    #       3.代码重用。

# 函数可以return哪些值。
#      return的值的个数和类型可以任意。
#           1.返回值的个数 > 1，以一个元组返回。
#           2.返回值的个数 = 1，以一个object返回。
#           3.返回值的个数 = 0，以一个None返回。
# 参数的分类：
#   1.位置参数.即普通参数。
#   2.关键字参数。即参数名=参数值的形式。
#   3.默认参数。即在函数定义时给参数一个默认值，调用函数是可传值，可不传值。
#   4.可变参数(参数组)。即实参的个数不固定，使用可变参数，并把传进去的参数转化为一个元组。


#
# 一.参数组
#           1.1普通参数组。定义：接受n个普通参数的可变参数。
#                         作用：把n个位置参数转换为tuple。
#               def test(*args):
#                    print(args)
#
#
#               test(1, 4, 6, 5, 4)第一种传值方式，以位置参数的方式传值。
#               test(*[1, 4, 6, 5, 4])第二种传值方式，以*[]的方式传值。
#
#
#
#               注意：位置参数要定义在参数组前，要不然的话位置参数无法赋值。
#                 def test2(x, *args):
#                      print(x)
#                      print(args)
#               将1赋给了位置参数x，将其余的参数赋给了参数组agrs。
#                 test2(1, 2, 3, 4,)
#
#
#           1.2关键字参数组：定义：接受关键字参数的可变参数定义。
#                           作用：把n个关键字参数转换成dic。
#                 def tset3(**args):
#                     print(args)
#
#
#                 tset3(name='xizheheng', age=18)  # 第一种传值方式，以关键字参数的方式传递。
#                 tset3(**{'name': 'xi', 'age': 18})  # 第二种传值放式，以字典的形式传值。
#
#
#
#
# 二.当所有参数同时存在于同一个函数时，参数的顺序时(位置参数, 默认参数, 参数组*arge, 关键字参数组**kwargs)
#                 def test6(name, age=18, *args, **kwargs):
#                     print(name)
#                     print(age)
#                     print(args)
#                     print(kwargs)
#
#
#                 test6('xizhehng', 20, 17694003041, pifu='bai')
